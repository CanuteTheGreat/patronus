name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libsqlite3-dev \
            pkg-config \
            build-essential \
            libssl-dev

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "ci-cache"
          cache-on-failure: true

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --workspace --all-features --all-targets -- -D warnings

      - name: Build
        run: cargo build --workspace --all-features --verbose

      - name: Run tests
        run: cargo test --workspace --all-features --verbose

      - name: Run doc tests
        run: cargo test --doc --workspace --all-features

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: cargo audit

      - name: Install cargo-deny
        run: cargo install cargo-deny

      - name: Check licenses and advisories
        run: cargo deny check

  build:
    name: Build Release
    runs-on: \${{ matrix.os }}
    timeout-minutes: 45
    needs: [test, security]

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: patronus-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: patronus-macos-x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: \${{ matrix.target }}

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev pkg-config libssl-dev

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install sqlite openssl@3

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: \${{ matrix.os }}

      - name: Build release
        run: cargo build --release --workspace --target \${{ matrix.target }}

      - name: Run release tests
        run: cargo test --release --workspace

      - name: Package binaries
        run: |
          mkdir -p dist
          cp target/\${{ matrix.target }}/release/patronus-sdwan dist/ || true
          cp target/\${{ matrix.target }}/release/patronus-dashboard dist/ || true
          tar czf \${{ matrix.artifact_name }}.tar.gz -C dist .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: \${{ matrix.artifact_name }}
          path: \${{ matrix.artifact_name }}.tar.gz
          retention-days: 7

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev pkg-config libssl-dev

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Generate coverage
        run: cargo llvm-cov --workspace --all-features --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: false

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: patronus-sdwan:ci-\${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --rm patronus-sdwan:ci-\${{ github.sha }} --version

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [test]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libsqlite3-dev \
            pkg-config \
            libssl-dev \
            wireguard-tools

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run integration tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/patronus_test
        run: cargo test --test '*' --features integration

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev pkg-config libssl-dev

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build documentation
        run: cargo doc --workspace --all-features --no-deps

      - name: Check for broken intra-doc links
        run: cargo doc --workspace --all-features --no-deps
        env:
          RUSTDOCFLAGS: "-D warnings"

      - name: Upload documentation
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: target/doc
          retention-days: 7
