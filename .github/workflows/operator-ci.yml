name: Operator CI

on:
  push:
    branches: [ main ]
    paths:
      - 'operator/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/operator-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'operator/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/operator-ci.yml'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --check -p patronus-operator

      - name: Run clippy
        run: cargo clippy -p patronus-operator --all-targets --all-features -- -D warnings

      - name: Run unit tests
        run: cargo test -p patronus-operator --lib

      - name: Build operator
        run: cargo build -p patronus-operator --release

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create kind cluster
        run: kind create cluster --name patronus-test --wait 5m

      - name: Install CRDs
        run: |
          cd operator
          cargo run --bin crdgen > crds/crds.yaml
          kubectl apply -f crds/crds.yaml
          kubectl wait --for condition=established --timeout=60s crd/sites.sdwan.patronus.dev
          kubectl wait --for condition=established --timeout=60s crd/policies.sdwan.patronus.dev

      - name: Run Site lifecycle tests
        run: cargo test -p patronus-operator --test site_lifecycle_test -- --ignored --test-threads=1

      - name: Run Policy lifecycle tests
        run: cargo test -p patronus-operator --test policy_lifecycle_test -- --ignored --test-threads=1

  health-checks:
    name: Health Check Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build operator
        run: cargo build -p patronus-operator

      - name: Start operator
        run: |
          PATRONUS_API_URL=http://localhost:9999 \
          HEALTH_PORT=8081 \
          METRICS_PORT=8080 \
          cargo run -p patronus-operator &
          echo $! > operator.pid
          # Wait for operator to start
          sleep 10

      - name: Run health check tests
        run: cargo test -p patronus-operator --test health_check_test -- --ignored

      - name: Stop operator
        if: always()
        run: |
          if [ -f operator.pid ]; then
            kill $(cat operator.pid) || true
          fi

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./operator/Dockerfile
          push: false
          tags: patronus/operator:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  helm:
    name: Helm Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.0'

      - name: Lint Helm chart
        run: helm lint operator/helm/patronus-operator

      - name: Template Helm chart
        run: helm template test operator/helm/patronus-operator > /dev/null
